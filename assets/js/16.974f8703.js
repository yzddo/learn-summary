(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{567:function(t,o,r){"use strict";r.r(o);var _=r(17),e=Object(_.a)({},(function(){var t=this,o=t.$createElement,r=t._self._c||o;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h4",{attrs:{id:"四个概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四个概念"}},[t._v("#")]),t._v(" 四个概念")]),t._v(" "),r("p",[t._v("1.js分为"),r("strong",[t._v("函数对象")]),t._v("和"),r("strong",[t._v("普通对象")]),t._v("，每个对象都有__proto__属性，但是只有函数对象才有prototype属性")]),t._v(" "),r("p",[t._v("2.Object、Function都是js内置的"),r("strong",[t._v("函数")]),t._v(", 类似的还有我们常用到的Array、RegExp、Date、Boolean、Number、String")]),t._v(" "),r("p",[t._v("3.属性"),r("code",[t._v("__proto__")]),t._v("是一个对象，它有两个属性，constructor和"),r("code",[t._v("__proto__")]),t._v("；")]),t._v(" "),r("p",[t._v("4.原型对象prototype有一个默认的constructor属性，用于记录实例是由哪个构造函数创建；")]),t._v(" "),r("h4",{attrs:{id:"两个准则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#两个准则"}},[t._v("#")]),t._v(" 两个准则")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("1. Person.prototype.constructor == Person // **准则1：原型对象（即Person.prototype）的constructor指向构造函数本身**\n2. person01.__proto__ == Person.prototype // **准则2：实例（即person01）的__proto__和原型对象指向同一个地方**\n")])])]),r("p",[t._v("原型链图")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/prototype.jpg"),alt:"prototype"}}),t._v(" "),r("p",[r("strong",[t._v("原型对象的作用：用来存放实例中共有的那部分属性、方法，可以大大减少内存消耗。")])])])}),[],!1,null,null,null);o.default=e.exports}}]);